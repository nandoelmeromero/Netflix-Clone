# Es un tipo de dato especial y hace un string de datos
scalar Upload 

type Query{
 prueba:String
 Usuarios: [Usuario]
 Usuario(id:ID!):Usuario 
 Peliculas: [Pelicula]
 Pelicula(id:ID!): Pelicula
 PeliculasClasificacion(clasificacion:clasificacion!): [Pelicula]
}

type Mutation{
  
  crearUsuario(nombre:String,
   apellido:String,
   correo:String,
   contrasena:String
  ):Usuario  #Esto te regresa un usuario

  actualizarUsuario(id:ID,
   nombre:String,
   apellido:String
  ):Usuario

  borrarUsuario(id:ID):String

  crearPelicula(
    
    data:crearPelicula!
  
  ):Pelicula

  borrarPelicula(id:ID):String

  agregarComentario(text:String):comentario! #Para agregar un nuevo comentario para mi subscriptio

}

type Usuario{
 _id: ID 
 nombre: String  
 apellido: String
 correo: String
 suscripcion: String
 is_active: Boolean
}

type Pelicula{
  _id: ID
 nombrePelicula: String
 clasificacion: clasificacion 
 sinopsis: String
 director: String
 duracion: String
 portadaPelicula: String
 puntuacion: Float
 urlPelicula: String
 is_active: Boolean 
 
}

enum clasificacion {
 Terror
 Heorismo
 Accion
 Romanticismo
}

input crearPelicula {
  nombrePelicula:String
  director:String
  portadaPelicula:Upload
  duracion:String
  urlPelicula:String
  sinopsis:String
}

#Suscription, para comenatrio en tiempo real
type suscripcion {
  comentarioNuevo: comentario! #definimos nuestra subcription
}

type comentario {
  id:Int!
  text:String!
}